<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BarMeetUp">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <SolidColorBrush x:Key="PrimaryColor" Color="#FFD768" />
            <SolidColorBrush x:Key="SecondaryColor" Color="#5B4A42" />
            <SolidColorBrush x:Key="ThirdColor" Color="#C09640" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Style TargetType="TextBlock" x:Key="TitleText">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontFamily" Value="Impact" />
        <Setter Property="Foreground" Value="{ThemeResource SecondaryColor}"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="HeaderTitleText">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="FontFamily" Value="Impact" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource PrimaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBlock" x:Key="SubTitleText">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{ThemeResource SecondaryColor}"/>
        <Setter Property="FontStyle" Value="Italic" />
    </Style>
    <Style TargetType="TextBlock" x:Key="DescriptionText">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontFamily" Value="Impact" />
        <Setter Property="Foreground" Value="{ThemeResource SecondaryColor}"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="HeroText">
        <Setter Property="FontSize" Value="46"/>
        <Setter Property="Foreground" Value="{ThemeResource SecondaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="ExtraBold" />
    </Style>
    <Style TargetType="TextBlock" x:Key="ArrowIcon">
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Foreground" Value="{ThemeResource SecondaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="ArrowIconInverted">
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Foreground" Value="{ThemeResource PrimaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="CommandBar" x:Key="CustomBar">
        <Setter Property="Background" Value="{ThemeResource AppBarBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarBorderThemeBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="{ThemeResource AppBarThemeMinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CommandBar">
                    <Border x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FloatingStates">
                                <VisualState x:Name="FloatingVisible">
                                    <Storyboard>
                                        <FadeInThemeAnimation TargetName="LayoutRoot" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FloatingHidden">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>False</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DockPositions">
                                <VisualState x:Name="Top">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                                   Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarTopBorderThemeThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                                   Storyboard.TargetProperty="Padding">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarTopThemePadding}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                                   Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarBottomBorderThemeThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                                   Storyboard.TargetProperty="Padding">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarBottomThemePadding}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <!-- Containers for Primary & Secondary Items -->
                            <ItemsControl x:Name="SecondaryItemsControl"
                            HorizontalAlignment="Left"
                            IsTabStop="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ItemsControl x:Name="PrimaryItemsControl"
                            HorizontalAlignment="Right"
                            IsTabStop="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 </ResourceDictionary>
